
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBOpy2RG0pJHLX-xMui22fRFlpD_ihYC3E&callback=initMap">
</script>

<div>
<p>
  <strong>Request number:</strong>
  <%= @ticket.request_number %>
</p>

<p>
  <strong>Sequence number:</strong>
  <%= @ticket.sequence_number %>
</p>

<p>
  <strong>Request type:</strong>
  <%= @ticket.request_type %>
</p>

<p>
  <strong>Response due date time:</strong>
  <%= @ticket.response_due_date_time %>
</p>

<p>
  <strong>Sacode1:</strong>
  <%= @ticket.sacode1 %>
</p>

<p>
  <strong>Sacode2:</strong>
  <%= @ticket.sacode2 %>
</p>

<p>
  <strong>Company name:</strong>
  <%= @ticket.company_name %>
</p>

<p>
  <strong>Address:</strong>
  <%= @ticket.address %>
</p>

<p>
  <strong>Crew on site:</strong>
  <%= @ticket.crew_on_site %>
</p>

<p>
  <strong>Well know text:</strong>
  <%= @ticket.well_know_text %>
</p>

<p>
  <strong>Created at:</strong>
  <%= @ticket.created_at %>
</p>

<p>
  <strong>Updated at:</strong>
  <%= @ticket.updated_at %>
</p>

<%= link_to 'Back', '/' %>
</div>
<div style='width: 100%;'>
  <div id="map" style='width: 100%; height: 400px;'></div>
</div>

<script>

    // markers = handler.addMarkers(<%=raw @hash.to_json %>);

</script>

<script>

var map;
var infoWindow;

function initMap() {

  var poly = "<%=raw @polygon %>"
  // test
  //var poly = "POLYGON ((25.774 -80.190, 18.466 -66.118, 32.321 -64.757 ))";
  var tmp = parsePolyStrings(poly);
   console.log('polygon array');
   console.log(tmp);
  console.log(tmp[0][0]);
  
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 5,
    center: tmp[0][0],
    mapTypeId: 'terrain'
  });


 

  // Define the LatLng coordinates for the polygon.
  var triangleCoords = [
      {lat: 25.774, lng: -80.190},
      {lat: 18.466, lng: -66.118},
      {lat: 32.321, lng: -64.757}
  ];

  // Construct the polygon.
  var bermudaTriangle = new google.maps.Polygon({
    paths: tmp,
    strokeColor: '#FF0000',
    strokeOpacity: 0.8,
    strokeWeight: 3,
    fillColor: '#FF0000',
    fillOpacity: 0.35
  });
  bermudaTriangle.setMap(map);

  // Add a listener for the click event.
  //bermudaTriangle.addListener('click', showArrays);

  infoWindow = new google.maps.InfoWindow;
}

function parsePolyStrings(ps) {
  var i, j, lat, lng, tmp, tmpArr,
      arr = [],
      //match '(' and ')' plus contents between them which contain anything other than '(' or ')'
      m = ps.match(/\([^\(\)]+\)/g);
  if (m !== null) {
    for (i = 0; i < m.length; i++) {
      //match all numeric strings
      tmp = m[i].match(/-?\d+\.?\d*/g);
      if (tmp !== null) {
        //convert all the coordinate sets in tmp from strings to Numbers and convert to LatLng objects
        for (j = 0, tmpArr = []; j < tmp.length; j+=2) {
            lat = Number(tmp[j]);
            lng = Number(tmp[j + 1]);
            console.log('lat:'+lat+' '+'lng:'+lng);
            tmpArr.push({lat, lng});
        }
        arr.push(tmpArr);
      }
    }
  }
  //array of arrays of LatLng objects, or empty array
  return arr;
}

</script>